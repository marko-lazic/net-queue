package ml.mlazic.netqueue.queues;

/**
 * NetQueue.java
 * Purpose: Acts as bridge between between inner API send and receive
 * implementations and a client.
 * @see ml.mlazic.netqueue.queues.Queue
 *
 * @author Marko Lazic
 * @version 1.0 4/21/18
 */
public class NetQueue {
    /** Interface for NetQueue client */
    protected Queue imp;

    /**
     * @param builder initializes connection and queue type */
    public NetQueue(QueueBuilder builder) {
        imp = builder.buildQueue();
    }


    /**
     * Instates default builder settings for the connection and queue type.
     */
    public NetQueue() {
        this(new QueueBuilder());
    }

    /**
     * @param in data to be sent over to message broker.
     * @return the consumerTag generated by the server.
     * if exception occurs returns -1
     */
    public Object send(Object in) {
        return imp.send(in);
    }

    /** @return the consumerTag generated by the server */
    public Object receive() {
        return imp.receive();
    }

    /** Opens the connection of the given implementation.*/
    public void open() {
        imp.open();
    }

    /** Closes the session and the connection. */
    public void close() {
        imp.close();
    }

}
